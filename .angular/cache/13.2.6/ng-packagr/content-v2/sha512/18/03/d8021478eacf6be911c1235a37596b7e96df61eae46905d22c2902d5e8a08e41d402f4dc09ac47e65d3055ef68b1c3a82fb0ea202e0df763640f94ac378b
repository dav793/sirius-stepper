{"hash":"541052c5b91cb98930f0ca3070efe5a1b09f071f","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { takeUntil, filter, switchMap, map, tap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nclass SiriusStepperComponent {\n    constructor(animBuilder) {\n        this.animBuilder = animBuilder;\n        this.indexChanges = new EventEmitter(true);\n        this.indexes = new EventEmitter(true);\n        this.highlightColor = '#000000';\n        this.mutedColor = '#AAAAAA';\n        this.fontFamily = 'Arial';\n        this.fontSize = 'inherit';\n        this._steps$ = new BehaviorSubject({});\n        this._stepViewIndex$ = new ReplaySubject(1);\n        this._stepControl$ = new ReplaySubject(1);\n        this._animating = false;\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    ngAfterViewInit() {\n        this.init();\n        this.setupStepTransitions();\n    }\n    get stepControl$() {\n        return this._stepControl$.asObservable();\n    }\n    get stepIndexes() {\n        return Object.keys(this._steps$.value)\n            .map(k => parseInt(k))\n            .sort((a, b) => a - b);\n    }\n    getStepLabel(stepIndex) {\n        return this._steps$.value[stepIndex].stepLabel || '';\n    }\n    isFirstStep(stepIndex) {\n        return this.stepIndexes[0] === stepIndex;\n    }\n    isLastStep(stepIndex) {\n        return this.stepIndexes[this.stepIndexes.length - 1] === stepIndex;\n    }\n    getColor(stepIndex) {\n        return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\n    }\n    linkStep(step) {\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\n            throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n        const newStep = {};\n        newStep[step.stepIndex] = step;\n        this._steps$.next(Object.assign({}, this._steps$.value, newStep));\n    }\n    unlinkStep(step) {\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\n            throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n        const newSteps = Object.assign({}, this._steps$.value);\n        delete newSteps[step.stepIndex];\n        this._steps$.next(newSteps);\n    }\n    transitionToStep(stepIndex) {\n        if (this._animating)\n            return;\n        const stepIndexes = Object.keys(this._steps$.value);\n        if (!stepIndexes.find(i => parseInt(i) === stepIndex))\n            throw new Error(`\n        Step '${stepIndex}' is not defined\n      `);\n        this._stepViewIndex$.next(stepIndex);\n    }\n    init() {\n        this._steps$.pipe(takeUntil(this.destroyed$), filter(steps => {\n            // filter out empty obj\n            return (steps && Object.keys(steps).length > 0) ? true : false;\n        })).subscribe(steps => {\n            setTimeout(() => this.indexes.emit(this.stepIndexes));\n            // set first step as active by default\n            this._stepViewIndex$.next(parseInt(Object.keys(steps)[0]));\n        });\n        if (!this.overrideIndex$)\n            return;\n        this.overrideIndex$.pipe(takeUntil(this.destroyed$)).subscribe(newIndex => {\n            if (!newIndex && newIndex !== 0)\n                return;\n            this.transitionToStep(newIndex);\n        });\n    }\n    setupStepTransitions() {\n        this._stepViewIndex$.pipe(takeUntil(this.destroyed$), switchMap(stepIndex => {\n            this._animating = true;\n            setTimeout(() => {\n                this._currentStepIndexImmediate = stepIndex;\n                this.indexChanges.emit(stepIndex);\n            });\n            if (this._currentStepIndex || this._currentStepIndex === 0)\n                return this.animate(this.fadeOut)\n                    .pipe(map(() => stepIndex));\n            return of(stepIndex);\n        }), switchMap(stepIndex => {\n            if (this._currentStepIndex || this._currentStepIndex === 0) {\n                this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\n            }\n            this._stepControl$.next({ index: stepIndex, state: 'create' });\n            return this.animate(this.fadeIn).pipe(tap(() => {\n                this._currentStepIndex = stepIndex;\n                this._animating = false;\n            }));\n        })).subscribe(() => { });\n    }\n    animate(animation) {\n        return new Observable(obs => {\n            const animFactory = this.animBuilder.build(animation);\n            const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\n            animPlayer.play();\n            animPlayer.onDone(() => {\n                obs.next();\n                obs.complete();\n            });\n        });\n    }\n    get fadeIn() {\n        return [\n            style({ opacity: 0, bottom: -20 }),\n            animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\n        ];\n    }\n    get fadeOut() {\n        return [\n            style({ opacity: '*', bottom: '*' }),\n            animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\n        ];\n    }\n}\nSiriusStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, deps: [{ token: i1.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nSiriusStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepperComponent, selector: \"lib-sirius-stepper\", inputs: { overrideIndex$: [\"override-step\", \"overrideIndex$\"], highlightColor: [\"highlight-color\", \"highlightColor\"], mutedColor: [\"muted-color\", \"mutedColor\"], fontFamily: [\"font-family\", \"fontFamily\"], fontSize: [\"font-size\", \"fontSize\"] }, outputs: { indexChanges: \"step-changes\", indexes: \"steps\" }, viewQueries: [{ propertyName: \"stepWrapper\", first: true, predicate: [\"stepWrapper\"], descendants: true }], ngImport: i0, template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `, isInline: true, styles: [\".header{display:flex;flex-direction:column;width:100%}.logo{text-align:center}.ctrlPanel{flex-grow:1;display:flex;flex-direction:row;justify-content:center}.ctrlBtn{display:flex;flex-direction:column}.ctrlBtn .gutterTop,.ctrlBtn .gutterBottom{flex-grow:1}.ctrlBtn .topWrap{display:flex;flex-direction:row}.ctrlBtn .lineLeft,.ctrlBtn .lineRight{flex-grow:1;height:50%;border-bottom:1px solid black}.ctrlBtn button{width:12px;height:12px;border-radius:12px;border:none}.ctrlBtn label{padding:8px 12px 0;text-align:center}.step-wrapper{position:relative}.invisible{visibility:hidden}@media only screen and (min-width: 600px){.header{flex-direction:row}.ctrlPanel{justify-content:right}}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-sirius-stepper',\n                    template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `,\n                    styles: [`\n    .header {\n      display: flex;\n      flex-direction: column;\n      width: 100%\n    }\n    \n    .logo {\n      text-align: center;\n    }\n    \n    .ctrlPanel {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n    \n    .ctrlBtn {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\n      flex-grow: 1;\n    }\n    \n    .ctrlBtn .topWrap {\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\n      flex-grow: 1;\n      height: 50%;\n      border-bottom: 1px solid black;\n    }\n    \n    .ctrlBtn button {\n      width: 12px;\n      height: 12px;\n      border-radius: 12px;\n      border: none;\n    }\n    \n    .ctrlBtn label {\n      padding: 8px 12px 0 12px;\n      text-align: center;\n    }\n    \n    .step-wrapper {\n      position: relative;\n    }\n    \n    .invisible {\n      visibility: hidden;\n    }\n\n    @media only screen and (min-width: 600px) {\n      .header {\n        flex-direction: row;\n      }\n      \n      .ctrlPanel {\n        justify-content: right;\n      }\n    }\n  `]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.AnimationBuilder }]; }, propDecorators: { stepWrapper: [{\n                type: ViewChild,\n                args: ['stepWrapper']\n            }], indexChanges: [{\n                type: Output,\n                args: ['step-changes']\n            }], indexes: [{\n                type: Output,\n                args: ['steps']\n            }], overrideIndex$: [{\n                type: Input,\n                args: ['override-step']\n            }], highlightColor: [{\n                type: Input,\n                args: ['highlight-color']\n            }], mutedColor: [{\n                type: Input,\n                args: ['muted-color']\n            }], fontFamily: [{\n                type: Input,\n                args: ['font-family']\n            }], fontSize: [{\n                type: Input,\n                args: ['font-size']\n            }] } });\n\nclass SiriusLogoDirective {\n    constructor(templateRef, viewContainerRef) {\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    ngOnDestroy() {\n        this.viewContainerRef.clear();\n    }\n    ngOnInit() {\n        this.viewContainerRef.clear();\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n}\nSiriusLogoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nSiriusLogoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusLogoDirective, selector: \"[sirius-logo]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[sirius-logo]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n\nclass SiriusStepDirective {\n    constructor(templateRef, viewContainerRef) {\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.initialized$ = new ReplaySubject(1);\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnDestroy() {\n        this.viewContainerRef.clear();\n        this.component.unlinkStep(this);\n        this.destroyed$.next();\n    }\n    ngOnChanges(changes) {\n        if (this.component && (this.stepIndex || this.stepIndex === 0)) {\n            this.component.linkStep(this);\n            this.initialized$.next();\n        }\n    }\n    ngOnInit() {\n        this.initialized$.pipe(takeUntil(this.destroyed$), switchMap(() => this.component.stepControl$)).subscribe(command => {\n            if (!command || command.index !== this.stepIndex)\n                return;\n            if (command.state === 'destroy')\n                setTimeout(() => this.viewContainerRef.clear());\n            else if (command.state === 'create')\n                setTimeout(() => this.viewContainerRef.createEmbeddedView(this.templateRef));\n        });\n    }\n}\nSiriusStepDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nSiriusStepDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepDirective, selector: \"[sirius-step]\", inputs: { component: [\"link\", \"component\"], stepIndex: [\"step\", \"stepIndex\"], stepLabel: [\"label\", \"stepLabel\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[sirius-step]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { component: [{\n                type: Input,\n                args: ['link']\n            }], stepIndex: [{\n                type: Input,\n                args: ['step']\n            }], stepLabel: [{\n                type: Input,\n                args: ['label']\n            }] } });\n\nclass SiriusStepperModule {\n}\nSiriusStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSiriusStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, declarations: [SiriusStepperComponent,\n        SiriusLogoDirective,\n        SiriusStepDirective], imports: [CommonModule,\n        BrowserAnimationsModule], exports: [SiriusStepperComponent,\n        SiriusLogoDirective,\n        SiriusStepDirective] });\nSiriusStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, imports: [[\n            CommonModule,\n            BrowserAnimationsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SiriusStepperComponent,\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ],\n                    imports: [\n                        CommonModule,\n                        BrowserAnimationsModule\n                    ],\n                    exports: [\n                        SiriusStepperComponent,\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ],\n                    entryComponents: [\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of sirius-stepper\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SiriusLogoDirective, SiriusStepDirective, SiriusStepperComponent, SiriusStepperModule };\n//# sourceMappingURL=sirius-stepper.mjs.map\n","map":{"version":3,"file":"sirius-stepper.mjs","sources":["../../../projects/sirius-stepper/src/lib/sirius-stepper.component.ts","../../../projects/sirius-stepper/src/lib/sirius-logo.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-step.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-stepper.module.ts","../../../projects/sirius-stepper/src/public-api.ts","../../../projects/sirius-stepper/src/sirius-stepper.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { AnimationBuilder, style, animate } from '@angular/animations';\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\nimport { filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { SiriusStepDirective } from './sirius-step.directive';\n\n@Component({\n  selector: 'lib-sirius-stepper',\n  template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `,\n  styles: [`\n    .header {\n      display: flex;\n      flex-direction: column;\n      width: 100%\n    }\n    \n    .logo {\n      text-align: center;\n    }\n    \n    .ctrlPanel {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n    \n    .ctrlBtn {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\n      flex-grow: 1;\n    }\n    \n    .ctrlBtn .topWrap {\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\n      flex-grow: 1;\n      height: 50%;\n      border-bottom: 1px solid black;\n    }\n    \n    .ctrlBtn button {\n      width: 12px;\n      height: 12px;\n      border-radius: 12px;\n      border: none;\n    }\n    \n    .ctrlBtn label {\n      padding: 8px 12px 0 12px;\n      text-align: center;\n    }\n    \n    .step-wrapper {\n      position: relative;\n    }\n    \n    .invisible {\n      visibility: hidden;\n    }\n\n    @media only screen and (min-width: 600px) {\n      .header {\n        flex-direction: row;\n      }\n      \n      .ctrlPanel {\n        justify-content: right;\n      }\n    }\n  `]\n})\nexport class SiriusStepperComponent implements OnDestroy, AfterViewInit {\n\n  @ViewChild('stepWrapper') stepWrapper: ElementRef;\n  @Output('step-changes') indexChanges = new EventEmitter<number>(true);\n  @Output('steps') indexes = new EventEmitter<number[]>(true);\n  @Input('override-step') overrideIndex$: Observable<number>;\n  @Input('highlight-color') highlightColor = '#000000';\n  @Input('muted-color') mutedColor = '#AAAAAA';\n  @Input('font-family') fontFamily = 'Arial';\n  @Input('font-size') fontSize = 'inherit';\n\n  private _steps$ = new BehaviorSubject<{ [index: string]: SiriusStepDirective }>({});\n  private _stepViewIndex$ = new ReplaySubject<number>(1);\n  private _stepControl$ = new ReplaySubject<{ index: number, state: 'create'|'destroy' }>(1);\n  private _currentStepIndex: number;\n  private _currentStepIndexImmediate: number;\n  private _animating = false;\n\n  private destroyed$ = new ReplaySubject<void>(1);\n\n  constructor(\n    private animBuilder: AnimationBuilder\n  ) { }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n  }\n\n  ngAfterViewInit() {\n    this.init();\n    this.setupStepTransitions();\n  }\n\n  get stepControl$(): Observable<{ index: number, state: 'create'|'destroy' }> {\n    return this._stepControl$.asObservable();\n  }\n\n  get stepIndexes(): number[] {\n    return Object.keys(this._steps$.value)\n      .map(k => parseInt(k))\n      .sort((a, b) => a - b);\n  }\n\n  getStepLabel(stepIndex: number): string {\n    return this._steps$.value[stepIndex].stepLabel || '';\n  }\n\n  isFirstStep(stepIndex: number): boolean {\n    return this.stepIndexes[0] === stepIndex;\n  }\n\n  isLastStep(stepIndex: number): boolean {\n    return this.stepIndexes[ this.stepIndexes.length-1 ] === stepIndex;\n  }\n\n  getColor(stepIndex: number): string {\n    return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\n  }\n\n  linkStep(step: SiriusStepDirective): void {\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\n      throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n\n    const newStep = {};\n    newStep[step.stepIndex] = step;\n\n    this._steps$.next(\n      Object.assign({}, this._steps$.value, newStep)\n    );\n  }\n\n  unlinkStep(step: SiriusStepDirective): void {\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\n      throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n\n    const newSteps = Object.assign({}, this._steps$.value);\n    delete newSteps[step.stepIndex];\n\n    this._steps$.next(newSteps);\n  }\n\n  transitionToStep(stepIndex: number): void {\n    if (this._animating)\n      return;\n\n    const stepIndexes = Object.keys(this._steps$.value);\n\n    if (!stepIndexes.find(i => parseInt(i) === stepIndex))\n      throw new Error(`\n        Step '${stepIndex}' is not defined\n      `);\n\n    this._stepViewIndex$.next(stepIndex);\n  }\n\n  private init() {\n\n    this._steps$.pipe(\n      takeUntil(this.destroyed$),\n      filter(steps => {\n        // filter out empty obj\n        return (steps && Object.keys(steps).length > 0) ? true : false;\n      })\n    ).subscribe(steps => {\n\n      setTimeout(() => this.indexes.emit(this.stepIndexes));\n\n      // set first step as active by default\n      this._stepViewIndex$.next(\n        parseInt( Object.keys(steps)[0] )\n      );\n\n    });\n\n    if (!this.overrideIndex$)\n      return;\n    this.overrideIndex$.pipe(\n      takeUntil(this.destroyed$)\n    ).subscribe(newIndex => {\n      if (!newIndex && newIndex !== 0)\n        return;\n      this.transitionToStep(newIndex)\n    });\n\n  }\n\n  private setupStepTransitions() {\n\n    this._stepViewIndex$.pipe(\n      takeUntil(this.destroyed$),\n\n      switchMap(stepIndex => {    // fade out last active step (if exists)\n        this._animating = true;\n        setTimeout(() => {\n          this._currentStepIndexImmediate = stepIndex;\n          this.indexChanges.emit(stepIndex);\n        });\n\n        if (this._currentStepIndex || this._currentStepIndex === 0)\n          return this.animate(this.fadeOut)\n            .pipe( map(() => stepIndex) );\n\n        return of(stepIndex);\n      }),\n\n      switchMap(stepIndex => {    // fade in new active step\n        if (this._currentStepIndex || this._currentStepIndex === 0) {\n          this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\n        }\n        this._stepControl$.next({ index: stepIndex, state: 'create' });\n\n        return this.animate(this.fadeIn).pipe(\n          tap(() => {\n            this._currentStepIndex = stepIndex;\n            this._animating = false;\n          })\n        );\n      })\n    ).subscribe(() => {});\n\n  }\n\n  private animate(animation: any[]): Observable<void> {\n    return new Observable(obs => {\n      const animFactory = this.animBuilder.build(animation);\n      const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\n      animPlayer.play();\n      animPlayer.onDone(() => {\n        obs.next();\n        obs.complete();\n      });\n    });\n  }\n\n  private get fadeIn() {\n    return [\n      style({ opacity: 0, bottom: -20 }),\n      animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\n    ];\n  }\n\n  private get fadeOut() {\n    return [\n      style({ opacity: '*', bottom: '*' }),\n      animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\n    ];\n  }\n\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sirius-logo]'\n})\nexport class SiriusLogoDirective implements OnInit, OnDestroy {\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnDestroy(): void {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit(): void {\n    this.viewContainerRef.clear();\n    this.viewContainerRef.createEmbeddedView(this.templateRef);\n  }\n\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  SimpleChanges\n} from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SiriusStepperComponent } from './sirius-stepper.component';\n\n@Directive({\n  selector: '[sirius-step]'\n})\nexport class SiriusStepDirective implements OnInit, OnDestroy, OnChanges {\n\n  @Input('link') component: SiriusStepperComponent;\n  @Input('step') stepIndex: number;\n  @Input('label') stepLabel: string;\n\n  private initialized$ = new ReplaySubject<void>(1);\n  private destroyed$ = new ReplaySubject<void>(1);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnDestroy(): void {\n    this.viewContainerRef.clear();\n    this.component.unlinkStep(this);\n    this.destroyed$.next();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ( this.component && (this.stepIndex || this.stepIndex === 0) ) {\n      this.component.linkStep(this);\n      this.initialized$.next();\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.initialized$.pipe(\n      takeUntil(this.destroyed$),\n      switchMap(() => this.component.stepControl$)\n    ).subscribe(command => {\n\n      if (!command || command.index !== this.stepIndex)\n        return;\n\n      if (command.state === 'destroy')\n        setTimeout( () => this.viewContainerRef.clear() );\n      else if (command.state === 'create')\n        setTimeout( () => this.viewContainerRef.createEmbeddedView(this.templateRef) );\n\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { SiriusStepperComponent } from './sirius-stepper.component';\nimport { SiriusLogoDirective } from './sirius-logo.directive';\nimport { SiriusStepDirective } from './sirius-step.directive';\n\n@NgModule({\n  declarations: [\n    SiriusStepperComponent,\n    SiriusLogoDirective,\n    SiriusStepDirective\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    SiriusStepperComponent,\n    SiriusLogoDirective,\n    SiriusStepDirective\n  ],\n  entryComponents: [\n    SiriusLogoDirective,\n    SiriusStepDirective\n  ]\n})\nexport class SiriusStepperModule { }\n","/*\n * Public API Surface of sirius-stepper\n */\n\nexport * from './lib/sirius-stepper.component';\nexport * from './lib/sirius-logo.directive';\nexport * from './lib/sirius-step.directive';\nexport * from './lib/sirius-stepper.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { takeUntil, filter, switchMap, map, tap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nclass SiriusStepperComponent {\n    constructor(animBuilder) {\n        this.animBuilder = animBuilder;\n        this.indexChanges = new EventEmitter(true);\n        this.indexes = new EventEmitter(true);\n        this.highlightColor = '#000000';\n        this.mutedColor = '#AAAAAA';\n        this.fontFamily = 'Arial';\n        this.fontSize = 'inherit';\n        this._steps$ = new BehaviorSubject({});\n        this._stepViewIndex$ = new ReplaySubject(1);\n        this._stepControl$ = new ReplaySubject(1);\n        this._animating = false;\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnDestroy() {\n        this.destroyed$.next();\n    }\n    ngAfterViewInit() {\n        this.init();\n        this.setupStepTransitions();\n    }\n    get stepControl$() {\n        return this._stepControl$.asObservable();\n    }\n    get stepIndexes() {\n        return Object.keys(this._steps$.value)\n            .map(k => parseInt(k))\n            .sort((a, b) => a - b);\n    }\n    getStepLabel(stepIndex) {\n        return this._steps$.value[stepIndex].stepLabel || '';\n    }\n    isFirstStep(stepIndex) {\n        return this.stepIndexes[0] === stepIndex;\n    }\n    isLastStep(stepIndex) {\n        return this.stepIndexes[this.stepIndexes.length - 1] === stepIndex;\n    }\n    getColor(stepIndex) {\n        return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\n    }\n    linkStep(step) {\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\n            throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n        const newStep = {};\n        newStep[step.stepIndex] = step;\n        this._steps$.next(Object.assign({}, this._steps$.value, newStep));\n    }\n    unlinkStep(step) {\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\n            throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n        const newSteps = Object.assign({}, this._steps$.value);\n        delete newSteps[step.stepIndex];\n        this._steps$.next(newSteps);\n    }\n    transitionToStep(stepIndex) {\n        if (this._animating)\n            return;\n        const stepIndexes = Object.keys(this._steps$.value);\n        if (!stepIndexes.find(i => parseInt(i) === stepIndex))\n            throw new Error(`\n        Step '${stepIndex}' is not defined\n      `);\n        this._stepViewIndex$.next(stepIndex);\n    }\n    init() {\n        this._steps$.pipe(takeUntil(this.destroyed$), filter(steps => {\n            // filter out empty obj\n            return (steps && Object.keys(steps).length > 0) ? true : false;\n        })).subscribe(steps => {\n            setTimeout(() => this.indexes.emit(this.stepIndexes));\n            // set first step as active by default\n            this._stepViewIndex$.next(parseInt(Object.keys(steps)[0]));\n        });\n        if (!this.overrideIndex$)\n            return;\n        this.overrideIndex$.pipe(takeUntil(this.destroyed$)).subscribe(newIndex => {\n            if (!newIndex && newIndex !== 0)\n                return;\n            this.transitionToStep(newIndex);\n        });\n    }\n    setupStepTransitions() {\n        this._stepViewIndex$.pipe(takeUntil(this.destroyed$), switchMap(stepIndex => {\n            this._animating = true;\n            setTimeout(() => {\n                this._currentStepIndexImmediate = stepIndex;\n                this.indexChanges.emit(stepIndex);\n            });\n            if (this._currentStepIndex || this._currentStepIndex === 0)\n                return this.animate(this.fadeOut)\n                    .pipe(map(() => stepIndex));\n            return of(stepIndex);\n        }), switchMap(stepIndex => {\n            if (this._currentStepIndex || this._currentStepIndex === 0) {\n                this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\n            }\n            this._stepControl$.next({ index: stepIndex, state: 'create' });\n            return this.animate(this.fadeIn).pipe(tap(() => {\n                this._currentStepIndex = stepIndex;\n                this._animating = false;\n            }));\n        })).subscribe(() => { });\n    }\n    animate(animation) {\n        return new Observable(obs => {\n            const animFactory = this.animBuilder.build(animation);\n            const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\n            animPlayer.play();\n            animPlayer.onDone(() => {\n                obs.next();\n                obs.complete();\n            });\n        });\n    }\n    get fadeIn() {\n        return [\n            style({ opacity: 0, bottom: -20 }),\n            animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\n        ];\n    }\n    get fadeOut() {\n        return [\n            style({ opacity: '*', bottom: '*' }),\n            animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\n        ];\n    }\n}\nSiriusStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, deps: [{ token: i1.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nSiriusStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepperComponent, selector: \"lib-sirius-stepper\", inputs: { overrideIndex$: [\"override-step\", \"overrideIndex$\"], highlightColor: [\"highlight-color\", \"highlightColor\"], mutedColor: [\"muted-color\", \"mutedColor\"], fontFamily: [\"font-family\", \"fontFamily\"], fontSize: [\"font-size\", \"fontSize\"] }, outputs: { indexChanges: \"step-changes\", indexes: \"steps\" }, viewQueries: [{ propertyName: \"stepWrapper\", first: true, predicate: [\"stepWrapper\"], descendants: true }], ngImport: i0, template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `, isInline: true, styles: [\".header{display:flex;flex-direction:column;width:100%}.logo{text-align:center}.ctrlPanel{flex-grow:1;display:flex;flex-direction:row;justify-content:center}.ctrlBtn{display:flex;flex-direction:column}.ctrlBtn .gutterTop,.ctrlBtn .gutterBottom{flex-grow:1}.ctrlBtn .topWrap{display:flex;flex-direction:row}.ctrlBtn .lineLeft,.ctrlBtn .lineRight{flex-grow:1;height:50%;border-bottom:1px solid black}.ctrlBtn button{width:12px;height:12px;border-radius:12px;border:none}.ctrlBtn label{padding:8px 12px 0;text-align:center}.step-wrapper{position:relative}.invisible{visibility:hidden}@media only screen and (min-width: 600px){.header{flex-direction:row}.ctrlPanel{justify-content:right}}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-sirius-stepper',\n                    template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `,\n                    styles: [`\n    .header {\n      display: flex;\n      flex-direction: column;\n      width: 100%\n    }\n    \n    .logo {\n      text-align: center;\n    }\n    \n    .ctrlPanel {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n    \n    .ctrlBtn {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\n      flex-grow: 1;\n    }\n    \n    .ctrlBtn .topWrap {\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\n      flex-grow: 1;\n      height: 50%;\n      border-bottom: 1px solid black;\n    }\n    \n    .ctrlBtn button {\n      width: 12px;\n      height: 12px;\n      border-radius: 12px;\n      border: none;\n    }\n    \n    .ctrlBtn label {\n      padding: 8px 12px 0 12px;\n      text-align: center;\n    }\n    \n    .step-wrapper {\n      position: relative;\n    }\n    \n    .invisible {\n      visibility: hidden;\n    }\n\n    @media only screen and (min-width: 600px) {\n      .header {\n        flex-direction: row;\n      }\n      \n      .ctrlPanel {\n        justify-content: right;\n      }\n    }\n  `]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.AnimationBuilder }]; }, propDecorators: { stepWrapper: [{\n                type: ViewChild,\n                args: ['stepWrapper']\n            }], indexChanges: [{\n                type: Output,\n                args: ['step-changes']\n            }], indexes: [{\n                type: Output,\n                args: ['steps']\n            }], overrideIndex$: [{\n                type: Input,\n                args: ['override-step']\n            }], highlightColor: [{\n                type: Input,\n                args: ['highlight-color']\n            }], mutedColor: [{\n                type: Input,\n                args: ['muted-color']\n            }], fontFamily: [{\n                type: Input,\n                args: ['font-family']\n            }], fontSize: [{\n                type: Input,\n                args: ['font-size']\n            }] } });\n\nclass SiriusLogoDirective {\n    constructor(templateRef, viewContainerRef) {\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    ngOnDestroy() {\n        this.viewContainerRef.clear();\n    }\n    ngOnInit() {\n        this.viewContainerRef.clear();\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n}\nSiriusLogoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nSiriusLogoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusLogoDirective, selector: \"[sirius-logo]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[sirius-logo]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n\nclass SiriusStepDirective {\n    constructor(templateRef, viewContainerRef) {\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n        this.initialized$ = new ReplaySubject(1);\n        this.destroyed$ = new ReplaySubject(1);\n    }\n    ngOnDestroy() {\n        this.viewContainerRef.clear();\n        this.component.unlinkStep(this);\n        this.destroyed$.next();\n    }\n    ngOnChanges(changes) {\n        if (this.component && (this.stepIndex || this.stepIndex === 0)) {\n            this.component.linkStep(this);\n            this.initialized$.next();\n        }\n    }\n    ngOnInit() {\n        this.initialized$.pipe(takeUntil(this.destroyed$), switchMap(() => this.component.stepControl$)).subscribe(command => {\n            if (!command || command.index !== this.stepIndex)\n                return;\n            if (command.state === 'destroy')\n                setTimeout(() => this.viewContainerRef.clear());\n            else if (command.state === 'create')\n                setTimeout(() => this.viewContainerRef.createEmbeddedView(this.templateRef));\n        });\n    }\n}\nSiriusStepDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nSiriusStepDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepDirective, selector: \"[sirius-step]\", inputs: { component: [\"link\", \"component\"], stepIndex: [\"step\", \"stepIndex\"], stepLabel: [\"label\", \"stepLabel\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[sirius-step]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { component: [{\n                type: Input,\n                args: ['link']\n            }], stepIndex: [{\n                type: Input,\n                args: ['step']\n            }], stepLabel: [{\n                type: Input,\n                args: ['label']\n            }] } });\n\nclass SiriusStepperModule {\n}\nSiriusStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSiriusStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, declarations: [SiriusStepperComponent,\n        SiriusLogoDirective,\n        SiriusStepDirective], imports: [CommonModule,\n        BrowserAnimationsModule], exports: [SiriusStepperComponent,\n        SiriusLogoDirective,\n        SiriusStepDirective] });\nSiriusStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, imports: [[\n            CommonModule,\n            BrowserAnimationsModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        SiriusStepperComponent,\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ],\n                    imports: [\n                        CommonModule,\n                        BrowserAnimationsModule\n                    ],\n                    exports: [\n                        SiriusStepperComponent,\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ],\n                    entryComponents: [\n                        SiriusLogoDirective,\n                        SiriusStepDirective\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of sirius-stepper\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SiriusLogoDirective, SiriusStepDirective, SiriusStepperComponent, SiriusStepperModule };\n//# sourceMappingURL=sirius-stepper.mjs.map\n","map":{"version":3,"file":"sirius-stepper.mjs","sources":["../../../projects/sirius-stepper/src/lib/sirius-stepper.component.ts","../../../projects/sirius-stepper/src/lib/sirius-logo.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-step.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-stepper.module.ts","../../../projects/sirius-stepper/src/public-api.ts","../../../projects/sirius-stepper/src/sirius-stepper.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { AnimationBuilder, style, animate } from '@angular/animations';\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\nimport { filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\n\nimport { SiriusStepDirective } from './sirius-step.directive';\n\n@Component({\n  selector: 'lib-sirius-stepper',\n  template: `    \n    <div class=\"header\">\n      \n      <div class=\"logo\">\n        <ng-content select=\"[sirius-logo]\"></ng-content>\n      </div>\n      \n      <div class=\"ctrlPanel\">\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\n          \n          <div class=\"ctrlBtn\">\n            <div class=\"gutterTop\"></div>\n            \n            <div class=\"topWrap\">\n              <div class=\"lineLeft\"\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\n              ></div>\n              \n              <button id=\"sscb_{{stepIndex}}\"\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\n                (click)=\"transitionToStep( stepIndex )\"\n              ></button>\n              \n              <div class=\"lineRight\" \n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\n              ></div>\n            </div>\n            \n            <label for=\"sscb_{{stepIndex}}\"\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\n            >{{ getStepLabel(stepIndex) }}</label>  \n            \n            <div class=\"gutterBottom\"></div>\n          </div>\n          \n        </ng-container>\n      </div>\n      \n    </div>\n    \n    <div class=\"step-wrapper\" #stepWrapper>\n      <ng-content select=\"[sirius-step]\"></ng-content>\n    </div>\n  `,\n  styles: [`\n    .header {\n      display: flex;\n      flex-direction: column;\n      width: 100%\n    }\n    \n    .logo {\n      text-align: center;\n    }\n    \n    .ctrlPanel {\n      flex-grow: 1;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n    \n    .ctrlBtn {\n      display: flex;\n      flex-direction: column;\n    }\n    \n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\n      flex-grow: 1;\n    }\n    \n    .ctrlBtn .topWrap {\n      display: flex;\n      flex-direction: row;\n    }\n    \n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\n      flex-grow: 1;\n      height: 50%;\n      border-bottom: 1px solid black;\n    }\n    \n    .ctrlBtn button {\n      width: 12px;\n      height: 12px;\n      border-radius: 12px;\n      border: none;\n    }\n    \n    .ctrlBtn label {\n      padding: 8px 12px 0 12px;\n      text-align: center;\n    }\n    \n    .step-wrapper {\n      position: relative;\n    }\n    \n    .invisible {\n      visibility: hidden;\n    }\n\n    @media only screen and (min-width: 600px) {\n      .header {\n        flex-direction: row;\n      }\n      \n      .ctrlPanel {\n        justify-content: right;\n      }\n    }\n  `]\n})\nexport class SiriusStepperComponent implements OnDestroy, AfterViewInit {\n\n  @ViewChild('stepWrapper') stepWrapper: ElementRef;\n  @Output('step-changes') indexChanges = new EventEmitter<number>(true);\n  @Output('steps') indexes = new EventEmitter<number[]>(true);\n  @Input('override-step') overrideIndex$: Observable<number>;\n  @Input('highlight-color') highlightColor = '#000000';\n  @Input('muted-color') mutedColor = '#AAAAAA';\n  @Input('font-family') fontFamily = 'Arial';\n  @Input('font-size') fontSize = 'inherit';\n\n  private _steps$ = new BehaviorSubject<{ [index: string]: SiriusStepDirective }>({});\n  private _stepViewIndex$ = new ReplaySubject<number>(1);\n  private _stepControl$ = new ReplaySubject<{ index: number, state: 'create'|'destroy' }>(1);\n  private _currentStepIndex: number;\n  private _currentStepIndexImmediate: number;\n  private _animating = false;\n\n  private destroyed$ = new ReplaySubject<void>(1);\n\n  constructor(\n    private animBuilder: AnimationBuilder\n  ) { }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n  }\n\n  ngAfterViewInit() {\n    this.init();\n    this.setupStepTransitions();\n  }\n\n  get stepControl$(): Observable<{ index: number, state: 'create'|'destroy' }> {\n    return this._stepControl$.asObservable();\n  }\n\n  get stepIndexes(): number[] {\n    return Object.keys(this._steps$.value)\n      .map(k => parseInt(k))\n      .sort((a, b) => a - b);\n  }\n\n  getStepLabel(stepIndex: number): string {\n    return this._steps$.value[stepIndex].stepLabel || '';\n  }\n\n  isFirstStep(stepIndex: number): boolean {\n    return this.stepIndexes[0] === stepIndex;\n  }\n\n  isLastStep(stepIndex: number): boolean {\n    return this.stepIndexes[ this.stepIndexes.length-1 ] === stepIndex;\n  }\n\n  getColor(stepIndex: number): string {\n    return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\n  }\n\n  linkStep(step: SiriusStepDirective): void {\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\n      throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n\n    const newStep = {};\n    newStep[step.stepIndex] = step;\n\n    this._steps$.next(\n      Object.assign({}, this._steps$.value, newStep)\n    );\n  }\n\n  unlinkStep(step: SiriusStepDirective): void {\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\n      throw new Error(`\n        Step is missing attribute [step]\n        \n        [step] should be a number identifying the order in the step sequence\n        \n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\n      `);\n\n    const newSteps = Object.assign({}, this._steps$.value);\n    delete newSteps[step.stepIndex];\n\n    this._steps$.next(newSteps);\n  }\n\n  transitionToStep(stepIndex: number): void {\n    if (this._animating)\n      return;\n\n    const stepIndexes = Object.keys(this._steps$.value);\n\n    if (!stepIndexes.find(i => parseInt(i) === stepIndex))\n      throw new Error(`\n        Step '${stepIndex}' is not defined\n      `);\n\n    this._stepViewIndex$.next(stepIndex);\n  }\n\n  private init() {\n\n    this._steps$.pipe(\n      takeUntil(this.destroyed$),\n      filter(steps => {\n        // filter out empty obj\n        return (steps && Object.keys(steps).length > 0) ? true : false;\n      })\n    ).subscribe(steps => {\n\n      setTimeout(() => this.indexes.emit(this.stepIndexes));\n\n      // set first step as active by default\n      this._stepViewIndex$.next(\n        parseInt( Object.keys(steps)[0] )\n      );\n\n    });\n\n    if (!this.overrideIndex$)\n      return;\n    this.overrideIndex$.pipe(\n      takeUntil(this.destroyed$)\n    ).subscribe(newIndex => {\n      if (!newIndex && newIndex !== 0)\n        return;\n      this.transitionToStep(newIndex)\n    });\n\n  }\n\n  private setupStepTransitions() {\n\n    this._stepViewIndex$.pipe(\n      takeUntil(this.destroyed$),\n\n      switchMap(stepIndex => {    // fade out last active step (if exists)\n        this._animating = true;\n        setTimeout(() => {\n          this._currentStepIndexImmediate = stepIndex;\n          this.indexChanges.emit(stepIndex);\n        });\n\n        if (this._currentStepIndex || this._currentStepIndex === 0)\n          return this.animate(this.fadeOut)\n            .pipe( map(() => stepIndex) );\n\n        return of(stepIndex);\n      }),\n\n      switchMap(stepIndex => {    // fade in new active step\n        if (this._currentStepIndex || this._currentStepIndex === 0) {\n          this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\n        }\n        this._stepControl$.next({ index: stepIndex, state: 'create' });\n\n        return this.animate(this.fadeIn).pipe(\n          tap(() => {\n            this._currentStepIndex = stepIndex;\n            this._animating = false;\n          })\n        );\n      })\n    ).subscribe(() => {});\n\n  }\n\n  private animate(animation: any[]): Observable<void> {\n    return new Observable(obs => {\n      const animFactory = this.animBuilder.build(animation);\n      const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\n      animPlayer.play();\n      animPlayer.onDone(() => {\n        obs.next();\n        obs.complete();\n      });\n    });\n  }\n\n  private get fadeIn() {\n    return [\n      style({ opacity: 0, bottom: -20 }),\n      animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\n    ];\n  }\n\n  private get fadeOut() {\n    return [\n      style({ opacity: '*', bottom: '*' }),\n      animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\n    ];\n  }\n\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Directive({\n  selector: '[sirius-logo]'\n})\nexport class SiriusLogoDirective implements OnInit, OnDestroy {\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnDestroy(): void {\n    this.viewContainerRef.clear();\n  }\n\n  ngOnInit(): void {\n    this.viewContainerRef.clear();\n    this.viewContainerRef.createEmbeddedView(this.templateRef);\n  }\n\n}\n","import {\n  Directive,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  SimpleChanges\n} from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SiriusStepperComponent } from './sirius-stepper.component';\n\n@Directive({\n  selector: '[sirius-step]'\n})\nexport class SiriusStepDirective implements OnInit, OnDestroy, OnChanges {\n\n  @Input('link') component: SiriusStepperComponent;\n  @Input('step') stepIndex: number;\n  @Input('label') stepLabel: string;\n\n  private initialized$ = new ReplaySubject<void>(1);\n  private destroyed$ = new ReplaySubject<void>(1);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  ngOnDestroy(): void {\n    this.viewContainerRef.clear();\n    this.component.unlinkStep(this);\n    this.destroyed$.next();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ( this.component && (this.stepIndex || this.stepIndex === 0) ) {\n      this.component.linkStep(this);\n      this.initialized$.next();\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.initialized$.pipe(\n      takeUntil(this.destroyed$),\n      switchMap(() => this.component.stepControl$)\n    ).subscribe(command => {\n\n      if (!command || command.index !== this.stepIndex)\n        return;\n\n      if (command.state === 'destroy')\n        setTimeout( () => this.viewContainerRef.clear() );\n      else if (command.state === 'create')\n        setTimeout( () => this.viewContainerRef.createEmbeddedView(this.templateRef) );\n\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { SiriusStepperComponent } from './sirius-stepper.component';\nimport { SiriusLogoDirective } from './sirius-logo.directive';\nimport { SiriusStepDirective } from './sirius-step.directive';\n\n@NgModule({\n  declarations: [\n    SiriusStepperComponent,\n    SiriusLogoDirective,\n    SiriusStepDirective\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule\n  ],\n  exports: [\n    SiriusStepperComponent,\n    SiriusLogoDirective,\n    SiriusStepDirective\n  ],\n  entryComponents: [\n    SiriusLogoDirective,\n    SiriusStepDirective\n  ]\n})\nexport class SiriusStepperModule { }\n","/*\n * Public API Surface of sirius-stepper\n */\n\nexport * from './lib/sirius-stepper.component';\nexport * from './lib/sirius-logo.directive';\nexport * from './lib/sirius-step.directive';\nexport * from './lib/sirius-stepper.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}