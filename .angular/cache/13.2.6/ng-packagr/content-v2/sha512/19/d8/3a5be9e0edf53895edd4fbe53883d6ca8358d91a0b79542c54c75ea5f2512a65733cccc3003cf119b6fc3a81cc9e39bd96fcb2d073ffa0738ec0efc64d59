{"hash":"2276eb4c42a7e90d067dea8bbaac36134323894f","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { takeUntil, filter, switchMap, map, tap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nclass SiriusStepperComponent {\r\n    constructor(animBuilder) {\r\n        this.animBuilder = animBuilder;\r\n        this.indexChanges = new EventEmitter(true);\r\n        this.indexes = new EventEmitter(true);\r\n        this.highlightColor = '#D76928';\r\n        this.mutedColor = '#A2A4AD';\r\n        this.fontFamily = 'Bryant Pro Semibold';\r\n        this.fontSize = 'inherit';\r\n        this._steps$ = new BehaviorSubject({});\r\n        this._stepViewIndex$ = new ReplaySubject(1);\r\n        this._stepControl$ = new ReplaySubject(1);\r\n        this._animating = false;\r\n        this.destroyed$ = new ReplaySubject(1);\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed$.next();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.init();\r\n        this.setupStepTransitions();\r\n    }\r\n    get stepControl$() {\r\n        return this._stepControl$.asObservable();\r\n    }\r\n    get stepIndexes() {\r\n        return Object.keys(this._steps$.value)\r\n            .map(k => parseInt(k))\r\n            .sort((a, b) => a - b);\r\n    }\r\n    getStepLabel(stepIndex) {\r\n        return this._steps$.value[stepIndex].stepLabel || '';\r\n    }\r\n    isFirstStep(stepIndex) {\r\n        return this.stepIndexes[0] === stepIndex;\r\n    }\r\n    isLastStep(stepIndex) {\r\n        return this.stepIndexes[this.stepIndexes.length - 1] === stepIndex;\r\n    }\r\n    getColor(stepIndex) {\r\n        return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\r\n    }\r\n    linkStep(step) {\r\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n            throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n        const newStep = {};\r\n        newStep[step.stepIndex] = step;\r\n        this._steps$.next(Object.assign({}, this._steps$.value, newStep));\r\n    }\r\n    unlinkStep(step) {\r\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n            throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n        const newSteps = Object.assign({}, this._steps$.value);\r\n        delete newSteps[step.stepIndex];\r\n        this._steps$.next(newSteps);\r\n    }\r\n    transitionToStep(stepIndex) {\r\n        if (this._animating)\r\n            return;\r\n        const stepIndexes = Object.keys(this._steps$.value);\r\n        if (!stepIndexes.find(i => parseInt(i) === stepIndex))\r\n            throw new Error(`\r\n        Step '${stepIndex}' is not defined\r\n      `);\r\n        this._stepViewIndex$.next(stepIndex);\r\n    }\r\n    init() {\r\n        this._steps$.pipe(takeUntil(this.destroyed$), filter(steps => {\r\n            // filter out empty obj\r\n            return (steps && Object.keys(steps).length > 0) ? true : false;\r\n        })).subscribe(steps => {\r\n            setTimeout(() => this.indexes.emit(this.stepIndexes));\r\n            // set first step as active by default\r\n            this._stepViewIndex$.next(parseInt(Object.keys(steps)[0]));\r\n        });\r\n        if (!this.overrideIndex$)\r\n            return;\r\n        this.overrideIndex$.pipe(takeUntil(this.destroyed$)).subscribe(newIndex => {\r\n            if (!newIndex && newIndex !== 0)\r\n                return;\r\n            this.transitionToStep(newIndex);\r\n        });\r\n    }\r\n    setupStepTransitions() {\r\n        this._stepViewIndex$.pipe(takeUntil(this.destroyed$), switchMap(stepIndex => {\r\n            this._animating = true;\r\n            setTimeout(() => {\r\n                this._currentStepIndexImmediate = stepIndex;\r\n                this.indexChanges.emit(stepIndex);\r\n            });\r\n            if (this._currentStepIndex || this._currentStepIndex === 0)\r\n                return this.animate(this.fadeOut)\r\n                    .pipe(map(() => stepIndex));\r\n            return of(stepIndex);\r\n        }), switchMap(stepIndex => {\r\n            if (this._currentStepIndex || this._currentStepIndex === 0) {\r\n                this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\r\n            }\r\n            this._stepControl$.next({ index: stepIndex, state: 'create' });\r\n            return this.animate(this.fadeIn).pipe(tap(() => {\r\n                this._currentStepIndex = stepIndex;\r\n                this._animating = false;\r\n            }));\r\n        })).subscribe(() => { });\r\n    }\r\n    animate(animation) {\r\n        return new Observable(obs => {\r\n            const animFactory = this.animBuilder.build(animation);\r\n            const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\r\n            animPlayer.play();\r\n            animPlayer.onDone(() => {\r\n                obs.next();\r\n                obs.complete();\r\n            });\r\n        });\r\n    }\r\n    get fadeIn() {\r\n        return [\r\n            style({ opacity: 0, bottom: -20 }),\r\n            animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\r\n        ];\r\n    }\r\n    get fadeOut() {\r\n        return [\r\n            style({ opacity: '*', bottom: '*' }),\r\n            animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\r\n        ];\r\n    }\r\n}\r\nSiriusStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, deps: [{ token: i1.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\r\nSiriusStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepperComponent, selector: \"lib-sirius-stepper\", inputs: { overrideIndex$: [\"override-step\", \"overrideIndex$\"], highlightColor: [\"highlight-color\", \"highlightColor\"], mutedColor: [\"muted-color\", \"mutedColor\"], fontFamily: [\"font-family\", \"fontFamily\"], fontSize: [\"font-size\", \"fontSize\"] }, outputs: { indexChanges: \"step-changes\", indexes: \"steps\" }, viewQueries: [{ propertyName: \"stepWrapper\", first: true, predicate: [\"stepWrapper\"], descendants: true }], ngImport: i0, template: `    \r\n    <div class=\"header\">\r\n      \r\n      <div class=\"logo\">\r\n        <ng-content select=\"[sirius-logo]\"></ng-content>\r\n      </div>\r\n      \r\n      <div class=\"ctrlPanel\">\r\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\r\n          \r\n          <div class=\"ctrlBtn\">\r\n            <div class=\"gutterTop\"></div>\r\n            \r\n            <div class=\"topWrap\">\r\n              <div class=\"lineLeft\"\r\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\r\n              ></div>\r\n              \r\n              <button id=\"sscb_{{stepIndex}}\"\r\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\r\n                (click)=\"transitionToStep( stepIndex )\"\r\n              ></button>\r\n              \r\n              <div class=\"lineRight\" \r\n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\r\n              ></div>\r\n            </div>\r\n            \r\n            <label for=\"sscb_{{stepIndex}}\"\r\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\r\n            >{{ getStepLabel(stepIndex) }}</label>  \r\n            \r\n            <div class=\"gutterBottom\"></div>\r\n          </div>\r\n          \r\n        </ng-container>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n    <div class=\"step-wrapper\" #stepWrapper>\r\n      <ng-content select=\"[sirius-step]\"></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".header{display:flex;flex-direction:column;width:100%}.logo{text-align:center}.ctrlPanel{flex-grow:1;display:flex;flex-direction:row;justify-content:center}.ctrlBtn{display:flex;flex-direction:column}.ctrlBtn .gutterTop,.ctrlBtn .gutterBottom{flex-grow:1}.ctrlBtn .topWrap{display:flex;flex-direction:row}.ctrlBtn .lineLeft,.ctrlBtn .lineRight{flex-grow:1;height:50%;border-bottom:1px solid black}.ctrlBtn button{width:12px;height:12px;border-radius:12px;border:none}.ctrlBtn label{padding:8px 12px 0;text-align:center}.step-wrapper{position:relative}.invisible{visibility:hidden}@media only screen and (min-width: 600px){.header{flex-direction:row}.ctrlPanel{justify-content:right}}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'lib-sirius-stepper',\r\n                    template: `    \r\n    <div class=\"header\">\r\n      \r\n      <div class=\"logo\">\r\n        <ng-content select=\"[sirius-logo]\"></ng-content>\r\n      </div>\r\n      \r\n      <div class=\"ctrlPanel\">\r\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\r\n          \r\n          <div class=\"ctrlBtn\">\r\n            <div class=\"gutterTop\"></div>\r\n            \r\n            <div class=\"topWrap\">\r\n              <div class=\"lineLeft\"\r\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\r\n              ></div>\r\n              \r\n              <button id=\"sscb_{{stepIndex}}\"\r\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\r\n                (click)=\"transitionToStep( stepIndex )\"\r\n              ></button>\r\n              \r\n              <div class=\"lineRight\" \r\n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\r\n              ></div>\r\n            </div>\r\n            \r\n            <label for=\"sscb_{{stepIndex}}\"\r\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\r\n            >{{ getStepLabel(stepIndex) }}</label>  \r\n            \r\n            <div class=\"gutterBottom\"></div>\r\n          </div>\r\n          \r\n        </ng-container>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n    <div class=\"step-wrapper\" #stepWrapper>\r\n      <ng-content select=\"[sirius-step]\"></ng-content>\r\n    </div>\r\n  `,\r\n                    styles: [`\r\n    .header {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%\r\n    }\r\n    \r\n    .logo {\r\n      text-align: center;\r\n    }\r\n    \r\n    .ctrlPanel {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .ctrlBtn {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\r\n      flex-grow: 1;\r\n    }\r\n    \r\n    .ctrlBtn .topWrap {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n    \r\n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\r\n      flex-grow: 1;\r\n      height: 50%;\r\n      border-bottom: 1px solid black;\r\n    }\r\n    \r\n    .ctrlBtn button {\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 12px;\r\n      border: none;\r\n    }\r\n    \r\n    .ctrlBtn label {\r\n      padding: 8px 12px 0 12px;\r\n      text-align: center;\r\n    }\r\n    \r\n    .step-wrapper {\r\n      position: relative;\r\n    }\r\n    \r\n    .invisible {\r\n      visibility: hidden;\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n      .header {\r\n        flex-direction: row;\r\n      }\r\n      \r\n      .ctrlPanel {\r\n        justify-content: right;\r\n      }\r\n    }\r\n  `]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.AnimationBuilder }]; }, propDecorators: { stepWrapper: [{\r\n                type: ViewChild,\r\n                args: ['stepWrapper']\r\n            }], indexChanges: [{\r\n                type: Output,\r\n                args: ['step-changes']\r\n            }], indexes: [{\r\n                type: Output,\r\n                args: ['steps']\r\n            }], overrideIndex$: [{\r\n                type: Input,\r\n                args: ['override-step']\r\n            }], highlightColor: [{\r\n                type: Input,\r\n                args: ['highlight-color']\r\n            }], mutedColor: [{\r\n                type: Input,\r\n                args: ['muted-color']\r\n            }], fontFamily: [{\r\n                type: Input,\r\n                args: ['font-family']\r\n            }], fontSize: [{\r\n                type: Input,\r\n                args: ['font-size']\r\n            }] } });\n\nclass SiriusLogoDirective {\r\n    constructor(templateRef, viewContainerRef) {\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n    }\r\n    ngOnDestroy() {\r\n        this.viewContainerRef.clear();\r\n    }\r\n    ngOnInit() {\r\n        this.viewContainerRef.clear();\r\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    }\r\n}\r\nSiriusLogoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nSiriusLogoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusLogoDirective, selector: \"[sirius-logo]\", ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[sirius-logo]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n\nclass SiriusStepDirective {\r\n    constructor(templateRef, viewContainerRef) {\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.initialized$ = new ReplaySubject(1);\r\n        this.destroyed$ = new ReplaySubject(1);\r\n    }\r\n    ngOnDestroy() {\r\n        this.viewContainerRef.clear();\r\n        this.component.unlinkStep(this);\r\n        this.destroyed$.next();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.component && (this.stepIndex || this.stepIndex === 0)) {\r\n            this.component.linkStep(this);\r\n            this.initialized$.next();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.initialized$.pipe(takeUntil(this.destroyed$), switchMap(() => this.component.stepControl$)).subscribe(command => {\r\n            if (!command || command.index !== this.stepIndex)\r\n                return;\r\n            if (command.state === 'destroy')\r\n                setTimeout(() => this.viewContainerRef.clear());\r\n            else if (command.state === 'create')\r\n                setTimeout(() => this.viewContainerRef.createEmbeddedView(this.templateRef));\r\n        });\r\n    }\r\n}\r\nSiriusStepDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nSiriusStepDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepDirective, selector: \"[sirius-step]\", inputs: { component: [\"link\", \"component\"], stepIndex: [\"step\", \"stepIndex\"], stepLabel: [\"label\", \"stepLabel\"] }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[sirius-step]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { component: [{\r\n                type: Input,\r\n                args: ['link']\r\n            }], stepIndex: [{\r\n                type: Input,\r\n                args: ['step']\r\n            }], stepLabel: [{\r\n                type: Input,\r\n                args: ['label']\r\n            }] } });\n\nclass SiriusStepperModule {\r\n}\r\nSiriusStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nSiriusStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, declarations: [SiriusStepperComponent,\r\n        SiriusLogoDirective,\r\n        SiriusStepDirective], imports: [CommonModule,\r\n        BrowserAnimationsModule], exports: [SiriusStepperComponent,\r\n        SiriusLogoDirective,\r\n        SiriusStepDirective] });\r\nSiriusStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, imports: [[\r\n            CommonModule,\r\n            BrowserAnimationsModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        SiriusStepperComponent,\r\n                        SiriusLogoDirective,\r\n                        SiriusStepDirective\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        BrowserAnimationsModule\r\n                    ],\r\n                    exports: [\r\n                        SiriusStepperComponent,\r\n                        SiriusLogoDirective,\r\n                        SiriusStepDirective\r\n                    ],\r\n                    entryComponents: [\r\n                        SiriusLogoDirective,\r\n                        SiriusStepDirective\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of sirius-stepper\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { SiriusLogoDirective, SiriusStepDirective, SiriusStepperComponent, SiriusStepperModule };\n//# sourceMappingURL=sirius-stepper.mjs.map\n","map":{"version":3,"file":"sirius-stepper.mjs","sources":["../../../projects/sirius-stepper/src/lib/sirius-stepper.component.ts","../../../projects/sirius-stepper/src/lib/sirius-logo.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-step.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-stepper.module.ts","../../../projects/sirius-stepper/src/public-api.ts","../../../projects/sirius-stepper/src/sirius-stepper.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AnimationBuilder, style, animate } from '@angular/animations';\r\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { SiriusStepDirective } from './sirius-step.directive';\r\n\r\n@Component({\r\n  selector: 'lib-sirius-stepper',\r\n  template: `    \r\n    <div class=\"header\">\r\n      \r\n      <div class=\"logo\">\r\n        <ng-content select=\"[sirius-logo]\"></ng-content>\r\n      </div>\r\n      \r\n      <div class=\"ctrlPanel\">\r\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\r\n          \r\n          <div class=\"ctrlBtn\">\r\n            <div class=\"gutterTop\"></div>\r\n            \r\n            <div class=\"topWrap\">\r\n              <div class=\"lineLeft\"\r\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\r\n              ></div>\r\n              \r\n              <button id=\"sscb_{{stepIndex}}\"\r\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\r\n                (click)=\"transitionToStep( stepIndex )\"\r\n              ></button>\r\n              \r\n              <div class=\"lineRight\" \r\n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\r\n              ></div>\r\n            </div>\r\n            \r\n            <label for=\"sscb_{{stepIndex}}\"\r\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\r\n            >{{ getStepLabel(stepIndex) }}</label>  \r\n            \r\n            <div class=\"gutterBottom\"></div>\r\n          </div>\r\n          \r\n        </ng-container>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n    <div class=\"step-wrapper\" #stepWrapper>\r\n      <ng-content select=\"[sirius-step]\"></ng-content>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .header {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%\r\n    }\r\n    \r\n    .logo {\r\n      text-align: center;\r\n    }\r\n    \r\n    .ctrlPanel {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .ctrlBtn {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\r\n      flex-grow: 1;\r\n    }\r\n    \r\n    .ctrlBtn .topWrap {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n    \r\n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\r\n      flex-grow: 1;\r\n      height: 50%;\r\n      border-bottom: 1px solid black;\r\n    }\r\n    \r\n    .ctrlBtn button {\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 12px;\r\n      border: none;\r\n    }\r\n    \r\n    .ctrlBtn label {\r\n      padding: 8px 12px 0 12px;\r\n      text-align: center;\r\n    }\r\n    \r\n    .step-wrapper {\r\n      position: relative;\r\n    }\r\n    \r\n    .invisible {\r\n      visibility: hidden;\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n      .header {\r\n        flex-direction: row;\r\n      }\r\n      \r\n      .ctrlPanel {\r\n        justify-content: right;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class SiriusStepperComponent implements OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('stepWrapper') stepWrapper: ElementRef;\r\n  @Output('step-changes') indexChanges = new EventEmitter<number>(true);\r\n  @Output('steps') indexes = new EventEmitter<number[]>(true);\r\n  @Input('override-step') overrideIndex$: Observable<number>;\r\n  @Input('highlight-color') highlightColor = '#D76928';\r\n  @Input('muted-color') mutedColor = '#A2A4AD';\r\n  @Input('font-family') fontFamily = 'Bryant Pro Semibold';\r\n  @Input('font-size') fontSize = 'inherit';\r\n\r\n  private _steps$ = new BehaviorSubject<{ [index: string]: SiriusStepDirective }>({});\r\n  private _stepViewIndex$ = new ReplaySubject<number>(1);\r\n  private _stepControl$ = new ReplaySubject<{ index: number, state: 'create'|'destroy' }>(1);\r\n  private _currentStepIndex: number;\r\n  private _currentStepIndexImmediate: number;\r\n  private _animating = false;\r\n\r\n  private destroyed$ = new ReplaySubject<void>(1);\r\n\r\n  constructor(\r\n    private animBuilder: AnimationBuilder\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.init();\r\n    this.setupStepTransitions();\r\n  }\r\n\r\n  get stepControl$(): Observable<{ index: number, state: 'create'|'destroy' }> {\r\n    return this._stepControl$.asObservable();\r\n  }\r\n\r\n  get stepIndexes(): number[] {\r\n    return Object.keys(this._steps$.value)\r\n      .map(k => parseInt(k))\r\n      .sort((a, b) => a - b);\r\n  }\r\n\r\n  getStepLabel(stepIndex: number): string {\r\n    return this._steps$.value[stepIndex].stepLabel || '';\r\n  }\r\n\r\n  isFirstStep(stepIndex: number): boolean {\r\n    return this.stepIndexes[0] === stepIndex;\r\n  }\r\n\r\n  isLastStep(stepIndex: number): boolean {\r\n    return this.stepIndexes[ this.stepIndexes.length-1 ] === stepIndex;\r\n  }\r\n\r\n  getColor(stepIndex: number): string {\r\n    return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\r\n  }\r\n\r\n  linkStep(step: SiriusStepDirective): void {\r\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n      throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n\r\n    const newStep = {};\r\n    newStep[step.stepIndex] = step;\r\n\r\n    this._steps$.next(\r\n      Object.assign({}, this._steps$.value, newStep)\r\n    );\r\n  }\r\n\r\n  unlinkStep(step: SiriusStepDirective): void {\r\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n      throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n\r\n    const newSteps = Object.assign({}, this._steps$.value);\r\n    delete newSteps[step.stepIndex];\r\n\r\n    this._steps$.next(newSteps);\r\n  }\r\n\r\n  transitionToStep(stepIndex: number): void {\r\n    if (this._animating)\r\n      return;\r\n\r\n    const stepIndexes = Object.keys(this._steps$.value);\r\n\r\n    if (!stepIndexes.find(i => parseInt(i) === stepIndex))\r\n      throw new Error(`\r\n        Step '${stepIndex}' is not defined\r\n      `);\r\n\r\n    this._stepViewIndex$.next(stepIndex);\r\n  }\r\n\r\n  private init() {\r\n\r\n    this._steps$.pipe(\r\n      takeUntil(this.destroyed$),\r\n      filter(steps => {\r\n        // filter out empty obj\r\n        return (steps && Object.keys(steps).length > 0) ? true : false;\r\n      })\r\n    ).subscribe(steps => {\r\n\r\n      setTimeout(() => this.indexes.emit(this.stepIndexes));\r\n\r\n      // set first step as active by default\r\n      this._stepViewIndex$.next(\r\n        parseInt( Object.keys(steps)[0] )\r\n      );\r\n\r\n    });\r\n\r\n    if (!this.overrideIndex$)\r\n      return;\r\n    this.overrideIndex$.pipe(\r\n      takeUntil(this.destroyed$)\r\n    ).subscribe(newIndex => {\r\n      if (!newIndex && newIndex !== 0)\r\n        return;\r\n      this.transitionToStep(newIndex)\r\n    });\r\n\r\n  }\r\n\r\n  private setupStepTransitions() {\r\n\r\n    this._stepViewIndex$.pipe(\r\n      takeUntil(this.destroyed$),\r\n\r\n      switchMap(stepIndex => {    // fade out last active step (if exists)\r\n        this._animating = true;\r\n        setTimeout(() => {\r\n          this._currentStepIndexImmediate = stepIndex;\r\n          this.indexChanges.emit(stepIndex);\r\n        });\r\n\r\n        if (this._currentStepIndex || this._currentStepIndex === 0)\r\n          return this.animate(this.fadeOut)\r\n            .pipe( map(() => stepIndex) );\r\n\r\n        return of(stepIndex);\r\n      }),\r\n\r\n      switchMap(stepIndex => {    // fade in new active step\r\n        if (this._currentStepIndex || this._currentStepIndex === 0) {\r\n          this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\r\n        }\r\n        this._stepControl$.next({ index: stepIndex, state: 'create' });\r\n\r\n        return this.animate(this.fadeIn).pipe(\r\n          tap(() => {\r\n            this._currentStepIndex = stepIndex;\r\n            this._animating = false;\r\n          })\r\n        );\r\n      })\r\n    ).subscribe(() => {});\r\n\r\n  }\r\n\r\n  private animate(animation: any[]): Observable<void> {\r\n    return new Observable(obs => {\r\n      const animFactory = this.animBuilder.build(animation);\r\n      const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\r\n      animPlayer.play();\r\n      animPlayer.onDone(() => {\r\n        obs.next();\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  private get fadeIn() {\r\n    return [\r\n      style({ opacity: 0, bottom: -20 }),\r\n      animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\r\n    ];\r\n  }\r\n\r\n  private get fadeOut() {\r\n    return [\r\n      style({ opacity: '*', bottom: '*' }),\r\n      animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\r\n    ];\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[sirius-logo]'\r\n})\r\nexport class SiriusLogoDirective implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainerRef: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewContainerRef.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.viewContainerRef.clear();\r\n    this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  OnDestroy,\r\n  OnChanges,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nimport { SiriusStepperComponent } from './sirius-stepper.component';\r\n\r\n@Directive({\r\n  selector: '[sirius-step]'\r\n})\r\nexport class SiriusStepDirective implements OnInit, OnDestroy, OnChanges {\r\n\r\n  @Input('link') component: SiriusStepperComponent;\r\n  @Input('step') stepIndex: number;\r\n  @Input('label') stepLabel: string;\r\n\r\n  private initialized$ = new ReplaySubject<void>(1);\r\n  private destroyed$ = new ReplaySubject<void>(1);\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainerRef: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewContainerRef.clear();\r\n    this.component.unlinkStep(this);\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ( this.component && (this.stepIndex || this.stepIndex === 0) ) {\r\n      this.component.linkStep(this);\r\n      this.initialized$.next();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.initialized$.pipe(\r\n      takeUntil(this.destroyed$),\r\n      switchMap(() => this.component.stepControl$)\r\n    ).subscribe(command => {\r\n\r\n      if (!command || command.index !== this.stepIndex)\r\n        return;\r\n\r\n      if (command.state === 'destroy')\r\n        setTimeout( () => this.viewContainerRef.clear() );\r\n      else if (command.state === 'create')\r\n        setTimeout( () => this.viewContainerRef.createEmbeddedView(this.templateRef) );\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { SiriusStepperComponent } from './sirius-stepper.component';\r\nimport { SiriusLogoDirective } from './sirius-logo.directive';\r\nimport { SiriusStepDirective } from './sirius-step.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SiriusStepperComponent,\r\n    SiriusLogoDirective,\r\n    SiriusStepDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    SiriusStepperComponent,\r\n    SiriusLogoDirective,\r\n    SiriusStepDirective\r\n  ],\r\n  entryComponents: [\r\n    SiriusLogoDirective,\r\n    SiriusStepDirective\r\n  ]\r\n})\r\nexport class SiriusStepperModule { }\r\n","/*\r\n * Public API Surface of sirius-stepper\r\n */\r\n\r\nexport * from './lib/sirius-stepper.component';\r\nexport * from './lib/sirius-logo.directive';\r\nexport * from './lib/sirius-step.directive';\r\nexport * from './lib/sirius-stepper.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;;;;;;MA4Ha,sBAAsB,CAAA;AAoBjC,IAAA,WAAA,CACU,WAA6B,EAAA;QAA7B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAkB;AAlBf,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,CAAS,IAAI,CAAC,CAAC;AACrD,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,YAAY,CAAW,IAAI,CAAC,CAAC;QAElC,IAAc,CAAA,cAAA,GAAG,SAAS,CAAC;QAC/B,IAAU,CAAA,UAAA,GAAG,SAAS,CAAC;QACvB,IAAU,CAAA,UAAA,GAAG,qBAAqB,CAAC;QACrC,IAAQ,CAAA,QAAA,GAAG,SAAS,CAAC;AAEjC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,eAAe,CAA2C,EAAE,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,aAAa,CAAS,CAAC,CAAC,CAAC;AAC/C,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,aAAa,CAA+C,CAAC,CAAC,CAAC;QAGnF,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAEnB,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,aAAa,CAAO,CAAC,CAAC,CAAC;KAI3C;IAEL,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;IAED,eAAe,GAAA;QACb,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;AAED,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;AAED,IAAA,IAAI,WAAW,GAAA;QACb,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aACnC,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrB,aAAA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAC1B;AAED,IAAA,YAAY,CAAC,SAAiB,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC;KACtD;AAED,IAAA,WAAW,CAAC,SAAiB,EAAA;QAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC;KAC1C;AAED,IAAA,UAAU,CAAC,SAAiB,EAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,WAAW,CAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAC,CAAC,CAAE,KAAK,SAAS,CAAC;KACpE;AAED,IAAA,QAAQ,CAAC,SAAiB,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,0BAA0B,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC;KAC7F;AAED,IAAA,QAAQ,CAAC,IAAyB,EAAA;AAChC,QAAA,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC;YACpD,MAAM,IAAI,KAAK,CAAC,CAAA;;;;;;AAMf,MAAA,CAAA,CAAC,CAAC;QAEL,MAAM,OAAO,GAAG,EAAE,CAAC;AACnB,QAAA,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAC/C,CAAC;KACH;AAED,IAAA,UAAU,CAAC,IAAyB,EAAA;AAClC,QAAA,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC;YACpD,MAAM,IAAI,KAAK,CAAC,CAAA;;;;;;AAMf,MAAA,CAAA,CAAC,CAAC;AAEL,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAEhC,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7B;AAED,IAAA,gBAAgB,CAAC,SAAiB,EAAA;QAChC,IAAI,IAAI,CAAC,UAAU;YACjB,OAAO;AAET,QAAA,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAEpD,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC;YACnD,MAAM,IAAI,KAAK,CAAC,CAAA;gBACN,SAAS,CAAA;AAClB,MAAA,CAAA,CAAC,CAAC;AAEL,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACtC;IAEO,IAAI,GAAA;AAEV,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CACf,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAC1B,MAAM,CAAC,KAAK,IAAG;;YAEb,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC;AACjE,SAAC,CAAC,CACH,CAAC,SAAS,CAAC,KAAK,IAAG;AAElB,YAAA,UAAU,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;AAGtD,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,QAAQ,CAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAClC,CAAC;AAEJ,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,cAAc;YACtB,OAAO;AACT,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC,QAAQ,IAAG;AACrB,YAAA,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,CAAC;gBAC7B,OAAO;AACT,YAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAA;AACjC,SAAC,CAAC,CAAC;KAEJ;IAEO,oBAAoB,GAAA;AAE1B,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAE1B,SAAS,CAAC,SAAS,IAAG;AACpB,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,UAAU,CAAC,MAAK;AACd,gBAAA,IAAI,CAAC,0BAA0B,GAAG,SAAS,CAAC;AAC5C,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpC,aAAC,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC;AACxD,gBAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;qBAC9B,IAAI,CAAE,GAAG,CAAC,MAAM,SAAS,CAAC,CAAE,CAAC;AAElC,YAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;AACvB,SAAC,CAAC,EAEF,SAAS,CAAC,SAAS,IAAG;YACpB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE;AAC1D,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;AAC9E,aAAA;AACD,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;AAE/D,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CACnC,GAAG,CAAC,MAAK;AACP,gBAAA,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;AACnC,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB,CAAC,CACH,CAAC;SACH,CAAC,CACH,CAAC,SAAS,CAAC,MAAK,GAAG,CAAC,CAAC;KAEvB;AAEO,IAAA,OAAO,CAAC,SAAgB,EAAA;AAC9B,QAAA,OAAO,IAAI,UAAU,CAAC,GAAG,IAAG;YAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AACtD,YAAA,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACtE,UAAU,CAAC,IAAI,EAAE,CAAC;AAClB,YAAA,UAAU,CAAC,MAAM,CAAC,MAAK;gBACrB,GAAG,CAAC,IAAI,EAAE,CAAC;gBACX,GAAG,CAAC,QAAQ,EAAE,CAAC;AACjB,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,IAAY,MAAM,GAAA;QAChB,OAAO;YACL,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;AAClC,YAAA,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3D,CAAC;KACH;AAED,IAAA,IAAY,OAAO,GAAA;QACjB,OAAO;YACL,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACpC,YAAA,OAAO,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;SAC7D,CAAC;KACH;;mHAtMU,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,EAnHvB,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,cAAA,EAAA,CAAA,eAAA,EAAA,gBAAA,CAAA,EAAA,cAAA,EAAA,CAAA,iBAAA,EAAA,gBAAA,CAAA,EAAA,UAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,UAAA,EAAA,CAAA,aAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,aAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,aAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,+qBAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FAsEU,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBArHlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CT,EAAA,CAAA;AACD,oBAAA,MAAM,EAAE,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmER,CAAC;AACH,iBAAA,CAAA;uGAG2B,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACA,YAAY,EAAA,CAAA;sBAAnC,MAAM;uBAAC,cAAc,CAAA;gBACL,OAAO,EAAA,CAAA;sBAAvB,MAAM;uBAAC,OAAO,CAAA;gBACS,cAAc,EAAA,CAAA;sBAArC,KAAK;uBAAC,eAAe,CAAA;gBACI,cAAc,EAAA,CAAA;sBAAvC,KAAK;uBAAC,iBAAiB,CAAA;gBACF,UAAU,EAAA,CAAA;sBAA/B,KAAK;uBAAC,aAAa,CAAA;gBACE,UAAU,EAAA,CAAA;sBAA/B,KAAK;uBAAC,aAAa,CAAA;gBACA,QAAQ,EAAA,CAAA;sBAA3B,KAAK;uBAAC,WAAW,CAAA;;;MC1HP,mBAAmB,CAAA;IAE9B,WACU,CAAA,WAA6B,EAC7B,gBAAkC,EAAA;QADlC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAkB;QAC7B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KACxC;IAEJ,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;KAC/B;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC5D;;gHAdU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAnB,mBAAmB,EAAA,QAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AAC1B,iBAAA,CAAA;;;MCQY,mBAAmB,CAAA;IAS9B,WACU,CAAA,WAA6B,EAC7B,gBAAkC,EAAA;QADlC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAkB;QAC7B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AALpC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,aAAa,CAAO,CAAC,CAAC,CAAC;AAC1C,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,aAAa,CAAO,CAAC,CAAC,CAAC;KAK5C;IAEJ,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;AAC9B,QAAA,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAChC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,IAAK,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,EAAG;AAChE,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC9B,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;AAC1B,SAAA;KACF;IAED,QAAQ,GAAA;AAEN,QAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAC1B,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAC7C,CAAC,SAAS,CAAC,OAAO,IAAG;YAEpB,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS;gBAC9C,OAAO;AAET,YAAA,IAAI,OAAO,CAAC,KAAK,KAAK,SAAS;gBAC7B,UAAU,CAAE,MAAM,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAE,CAAC;AAC/C,iBAAA,IAAI,OAAO,CAAC,KAAK,KAAK,QAAQ;AACjC,gBAAA,UAAU,CAAE,MAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAE,CAAC;AAEnF,SAAC,CAAC,CAAC;KAEJ;;gHA5CU,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;oGAAnB,mBAAmB,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,CAAA,MAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,CAAA,MAAA,EAAA,WAAA,CAAA,EAAA,SAAA,EAAA,CAAA,OAAA,EAAA,WAAA,CAAA,EAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AAC1B,iBAAA,CAAA;iIAGgB,SAAS,EAAA,CAAA;sBAAvB,KAAK;uBAAC,MAAM,CAAA;gBACE,SAAS,EAAA,CAAA;sBAAvB,KAAK;uBAAC,MAAM,CAAA;gBACG,SAAS,EAAA,CAAA;sBAAxB,KAAK;uBAAC,OAAO,CAAA;;;MCMH,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,iBAlB5B,sBAAsB;QACtB,mBAAmB;AACnB,QAAA,mBAAmB,aAGnB,YAAY;AACZ,QAAA,uBAAuB,aAGvB,sBAAsB;QACtB,mBAAmB;QACnB,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAOV,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAdrB,OAAA,EAAA,CAAA;YACP,YAAY;YACZ,uBAAuB;AACxB,SAAA,CAAA,EAAA,CAAA,CAAA;2FAWU,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBApB/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,sBAAsB;wBACtB,mBAAmB;wBACnB,mBAAmB;AACpB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,uBAAuB;AACxB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,sBAAsB;wBACtB,mBAAmB;wBACnB,mBAAmB;AACpB,qBAAA;AACD,oBAAA,eAAe,EAAE;wBACf,mBAAmB;wBACnB,mBAAmB;AACpB,qBAAA;AACF,iBAAA,CAAA;;;AC3BD;;AAEG;;ACFH;;AAEG;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Output, Input, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport { BehaviorSubject, ReplaySubject, of, Observable } from 'rxjs';\nimport { takeUntil, filter, switchMap, map, tap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nclass SiriusStepperComponent {\r\n    constructor(animBuilder) {\r\n        this.animBuilder = animBuilder;\r\n        this.indexChanges = new EventEmitter(true);\r\n        this.indexes = new EventEmitter(true);\r\n        this.highlightColor = '#D76928';\r\n        this.mutedColor = '#A2A4AD';\r\n        this.fontFamily = 'Bryant Pro Semibold';\r\n        this.fontSize = 'inherit';\r\n        this._steps$ = new BehaviorSubject({});\r\n        this._stepViewIndex$ = new ReplaySubject(1);\r\n        this._stepControl$ = new ReplaySubject(1);\r\n        this._animating = false;\r\n        this.destroyed$ = new ReplaySubject(1);\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed$.next();\r\n    }\r\n    ngAfterViewInit() {\r\n        this.init();\r\n        this.setupStepTransitions();\r\n    }\r\n    get stepControl$() {\r\n        return this._stepControl$.asObservable();\r\n    }\r\n    get stepIndexes() {\r\n        return Object.keys(this._steps$.value)\r\n            .map(k => parseInt(k))\r\n            .sort((a, b) => a - b);\r\n    }\r\n    getStepLabel(stepIndex) {\r\n        return this._steps$.value[stepIndex].stepLabel || '';\r\n    }\r\n    isFirstStep(stepIndex) {\r\n        return this.stepIndexes[0] === stepIndex;\r\n    }\r\n    isLastStep(stepIndex) {\r\n        return this.stepIndexes[this.stepIndexes.length - 1] === stepIndex;\r\n    }\r\n    getColor(stepIndex) {\r\n        return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\r\n    }\r\n    linkStep(step) {\r\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n            throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n        const newStep = {};\r\n        newStep[step.stepIndex] = step;\r\n        this._steps$.next(Object.assign({}, this._steps$.value, newStep));\r\n    }\r\n    unlinkStep(step) {\r\n        if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n            throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n        const newSteps = Object.assign({}, this._steps$.value);\r\n        delete newSteps[step.stepIndex];\r\n        this._steps$.next(newSteps);\r\n    }\r\n    transitionToStep(stepIndex) {\r\n        if (this._animating)\r\n            return;\r\n        const stepIndexes = Object.keys(this._steps$.value);\r\n        if (!stepIndexes.find(i => parseInt(i) === stepIndex))\r\n            throw new Error(`\r\n        Step '${stepIndex}' is not defined\r\n      `);\r\n        this._stepViewIndex$.next(stepIndex);\r\n    }\r\n    init() {\r\n        this._steps$.pipe(takeUntil(this.destroyed$), filter(steps => {\r\n            // filter out empty obj\r\n            return (steps && Object.keys(steps).length > 0) ? true : false;\r\n        })).subscribe(steps => {\r\n            setTimeout(() => this.indexes.emit(this.stepIndexes));\r\n            // set first step as active by default\r\n            this._stepViewIndex$.next(parseInt(Object.keys(steps)[0]));\r\n        });\r\n        if (!this.overrideIndex$)\r\n            return;\r\n        this.overrideIndex$.pipe(takeUntil(this.destroyed$)).subscribe(newIndex => {\r\n            if (!newIndex && newIndex !== 0)\r\n                return;\r\n            this.transitionToStep(newIndex);\r\n        });\r\n    }\r\n    setupStepTransitions() {\r\n        this._stepViewIndex$.pipe(takeUntil(this.destroyed$), switchMap(stepIndex => {\r\n            this._animating = true;\r\n            setTimeout(() => {\r\n                this._currentStepIndexImmediate = stepIndex;\r\n                this.indexChanges.emit(stepIndex);\r\n            });\r\n            if (this._currentStepIndex || this._currentStepIndex === 0)\r\n                return this.animate(this.fadeOut)\r\n                    .pipe(map(() => stepIndex));\r\n            return of(stepIndex);\r\n        }), switchMap(stepIndex => {\r\n            if (this._currentStepIndex || this._currentStepIndex === 0) {\r\n                this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\r\n            }\r\n            this._stepControl$.next({ index: stepIndex, state: 'create' });\r\n            return this.animate(this.fadeIn).pipe(tap(() => {\r\n                this._currentStepIndex = stepIndex;\r\n                this._animating = false;\r\n            }));\r\n        })).subscribe(() => { });\r\n    }\r\n    animate(animation) {\r\n        return new Observable(obs => {\r\n            const animFactory = this.animBuilder.build(animation);\r\n            const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\r\n            animPlayer.play();\r\n            animPlayer.onDone(() => {\r\n                obs.next();\r\n                obs.complete();\r\n            });\r\n        });\r\n    }\r\n    get fadeIn() {\r\n        return [\r\n            style({ opacity: 0, bottom: -20 }),\r\n            animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\r\n        ];\r\n    }\r\n    get fadeOut() {\r\n        return [\r\n            style({ opacity: '*', bottom: '*' }),\r\n            animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\r\n        ];\r\n    }\r\n}\r\nSiriusStepperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, deps: [{ token: i1.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\r\nSiriusStepperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepperComponent, selector: \"lib-sirius-stepper\", inputs: { overrideIndex$: [\"override-step\", \"overrideIndex$\"], highlightColor: [\"highlight-color\", \"highlightColor\"], mutedColor: [\"muted-color\", \"mutedColor\"], fontFamily: [\"font-family\", \"fontFamily\"], fontSize: [\"font-size\", \"fontSize\"] }, outputs: { indexChanges: \"step-changes\", indexes: \"steps\" }, viewQueries: [{ propertyName: \"stepWrapper\", first: true, predicate: [\"stepWrapper\"], descendants: true }], ngImport: i0, template: `    \r\n    <div class=\"header\">\r\n      \r\n      <div class=\"logo\">\r\n        <ng-content select=\"[sirius-logo]\"></ng-content>\r\n      </div>\r\n      \r\n      <div class=\"ctrlPanel\">\r\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\r\n          \r\n          <div class=\"ctrlBtn\">\r\n            <div class=\"gutterTop\"></div>\r\n            \r\n            <div class=\"topWrap\">\r\n              <div class=\"lineLeft\"\r\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\r\n              ></div>\r\n              \r\n              <button id=\"sscb_{{stepIndex}}\"\r\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\r\n                (click)=\"transitionToStep( stepIndex )\"\r\n              ></button>\r\n              \r\n              <div class=\"lineRight\" \r\n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\r\n              ></div>\r\n            </div>\r\n            \r\n            <label for=\"sscb_{{stepIndex}}\"\r\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\r\n            >{{ getStepLabel(stepIndex) }}</label>  \r\n            \r\n            <div class=\"gutterBottom\"></div>\r\n          </div>\r\n          \r\n        </ng-container>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n    <div class=\"step-wrapper\" #stepWrapper>\r\n      <ng-content select=\"[sirius-step]\"></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".header{display:flex;flex-direction:column;width:100%}.logo{text-align:center}.ctrlPanel{flex-grow:1;display:flex;flex-direction:row;justify-content:center}.ctrlBtn{display:flex;flex-direction:column}.ctrlBtn .gutterTop,.ctrlBtn .gutterBottom{flex-grow:1}.ctrlBtn .topWrap{display:flex;flex-direction:row}.ctrlBtn .lineLeft,.ctrlBtn .lineRight{flex-grow:1;height:50%;border-bottom:1px solid black}.ctrlBtn button{width:12px;height:12px;border-radius:12px;border:none}.ctrlBtn label{padding:8px 12px 0;text-align:center}.step-wrapper{position:relative}.invisible{visibility:hidden}@media only screen and (min-width: 600px){.header{flex-direction:row}.ctrlPanel{justify-content:right}}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'lib-sirius-stepper',\r\n                    template: `    \r\n    <div class=\"header\">\r\n      \r\n      <div class=\"logo\">\r\n        <ng-content select=\"[sirius-logo]\"></ng-content>\r\n      </div>\r\n      \r\n      <div class=\"ctrlPanel\">\r\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\r\n          \r\n          <div class=\"ctrlBtn\">\r\n            <div class=\"gutterTop\"></div>\r\n            \r\n            <div class=\"topWrap\">\r\n              <div class=\"lineLeft\"\r\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\r\n              ></div>\r\n              \r\n              <button id=\"sscb_{{stepIndex}}\"\r\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\r\n                (click)=\"transitionToStep( stepIndex )\"\r\n              ></button>\r\n              \r\n              <div class=\"lineRight\" \r\n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\r\n              ></div>\r\n            </div>\r\n            \r\n            <label for=\"sscb_{{stepIndex}}\"\r\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\r\n            >{{ getStepLabel(stepIndex) }}</label>  \r\n            \r\n            <div class=\"gutterBottom\"></div>\r\n          </div>\r\n          \r\n        </ng-container>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n    <div class=\"step-wrapper\" #stepWrapper>\r\n      <ng-content select=\"[sirius-step]\"></ng-content>\r\n    </div>\r\n  `,\r\n                    styles: [`\r\n    .header {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%\r\n    }\r\n    \r\n    .logo {\r\n      text-align: center;\r\n    }\r\n    \r\n    .ctrlPanel {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .ctrlBtn {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\r\n      flex-grow: 1;\r\n    }\r\n    \r\n    .ctrlBtn .topWrap {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n    \r\n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\r\n      flex-grow: 1;\r\n      height: 50%;\r\n      border-bottom: 1px solid black;\r\n    }\r\n    \r\n    .ctrlBtn button {\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 12px;\r\n      border: none;\r\n    }\r\n    \r\n    .ctrlBtn label {\r\n      padding: 8px 12px 0 12px;\r\n      text-align: center;\r\n    }\r\n    \r\n    .step-wrapper {\r\n      position: relative;\r\n    }\r\n    \r\n    .invisible {\r\n      visibility: hidden;\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n      .header {\r\n        flex-direction: row;\r\n      }\r\n      \r\n      .ctrlPanel {\r\n        justify-content: right;\r\n      }\r\n    }\r\n  `]\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i1.AnimationBuilder }]; }, propDecorators: { stepWrapper: [{\r\n                type: ViewChild,\r\n                args: ['stepWrapper']\r\n            }], indexChanges: [{\r\n                type: Output,\r\n                args: ['step-changes']\r\n            }], indexes: [{\r\n                type: Output,\r\n                args: ['steps']\r\n            }], overrideIndex$: [{\r\n                type: Input,\r\n                args: ['override-step']\r\n            }], highlightColor: [{\r\n                type: Input,\r\n                args: ['highlight-color']\r\n            }], mutedColor: [{\r\n                type: Input,\r\n                args: ['muted-color']\r\n            }], fontFamily: [{\r\n                type: Input,\r\n                args: ['font-family']\r\n            }], fontSize: [{\r\n                type: Input,\r\n                args: ['font-size']\r\n            }] } });\n\nclass SiriusLogoDirective {\r\n    constructor(templateRef, viewContainerRef) {\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n    }\r\n    ngOnDestroy() {\r\n        this.viewContainerRef.clear();\r\n    }\r\n    ngOnInit() {\r\n        this.viewContainerRef.clear();\r\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    }\r\n}\r\nSiriusLogoDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nSiriusLogoDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusLogoDirective, selector: \"[sirius-logo]\", ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusLogoDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[sirius-logo]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n\nclass SiriusStepDirective {\r\n    constructor(templateRef, viewContainerRef) {\r\n        this.templateRef = templateRef;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.initialized$ = new ReplaySubject(1);\r\n        this.destroyed$ = new ReplaySubject(1);\r\n    }\r\n    ngOnDestroy() {\r\n        this.viewContainerRef.clear();\r\n        this.component.unlinkStep(this);\r\n        this.destroyed$.next();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.component && (this.stepIndex || this.stepIndex === 0)) {\r\n            this.component.linkStep(this);\r\n            this.initialized$.next();\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this.initialized$.pipe(takeUntil(this.destroyed$), switchMap(() => this.component.stepControl$)).subscribe(command => {\r\n            if (!command || command.index !== this.stepIndex)\r\n                return;\r\n            if (command.state === 'destroy')\r\n                setTimeout(() => this.viewContainerRef.clear());\r\n            else if (command.state === 'create')\r\n                setTimeout(() => this.viewContainerRef.createEmbeddedView(this.templateRef));\r\n        });\r\n    }\r\n}\r\nSiriusStepDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nSiriusStepDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.7\", type: SiriusStepDirective, selector: \"[sirius-step]\", inputs: { component: [\"link\", \"component\"], stepIndex: [\"step\", \"stepIndex\"], stepLabel: [\"label\", \"stepLabel\"] }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[sirius-step]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { component: [{\r\n                type: Input,\r\n                args: ['link']\r\n            }], stepIndex: [{\r\n                type: Input,\r\n                args: ['step']\r\n            }], stepLabel: [{\r\n                type: Input,\r\n                args: ['label']\r\n            }] } });\n\nclass SiriusStepperModule {\r\n}\r\nSiriusStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nSiriusStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, declarations: [SiriusStepperComponent,\r\n        SiriusLogoDirective,\r\n        SiriusStepDirective], imports: [CommonModule,\r\n        BrowserAnimationsModule], exports: [SiriusStepperComponent,\r\n        SiriusLogoDirective,\r\n        SiriusStepDirective] });\r\nSiriusStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, imports: [[\r\n            CommonModule,\r\n            BrowserAnimationsModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: SiriusStepperModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        SiriusStepperComponent,\r\n                        SiriusLogoDirective,\r\n                        SiriusStepDirective\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        BrowserAnimationsModule\r\n                    ],\r\n                    exports: [\r\n                        SiriusStepperComponent,\r\n                        SiriusLogoDirective,\r\n                        SiriusStepDirective\r\n                    ],\r\n                    entryComponents: [\r\n                        SiriusLogoDirective,\r\n                        SiriusStepDirective\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of sirius-stepper\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { SiriusLogoDirective, SiriusStepDirective, SiriusStepperComponent, SiriusStepperModule };\n//# sourceMappingURL=sirius-stepper.mjs.map\n","map":{"version":3,"file":"sirius-stepper.mjs","sources":["../../../projects/sirius-stepper/src/lib/sirius-stepper.component.ts","../../../projects/sirius-stepper/src/lib/sirius-logo.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-step.directive.ts","../../../projects/sirius-stepper/src/lib/sirius-stepper.module.ts","../../../projects/sirius-stepper/src/public-api.ts","../../../projects/sirius-stepper/src/sirius-stepper.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, OnDestroy, ViewChild, Input, Output, EventEmitter } from '@angular/core';\r\nimport { AnimationBuilder, style, animate } from '@angular/animations';\r\nimport { BehaviorSubject, Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\n\r\nimport { SiriusStepDirective } from './sirius-step.directive';\r\n\r\n@Component({\r\n  selector: 'lib-sirius-stepper',\r\n  template: `    \r\n    <div class=\"header\">\r\n      \r\n      <div class=\"logo\">\r\n        <ng-content select=\"[sirius-logo]\"></ng-content>\r\n      </div>\r\n      \r\n      <div class=\"ctrlPanel\">\r\n        <ng-container *ngFor=\"let stepIndex of stepIndexes\">\r\n          \r\n          <div class=\"ctrlBtn\">\r\n            <div class=\"gutterTop\"></div>\r\n            \r\n            <div class=\"topWrap\">\r\n              <div class=\"lineLeft\"\r\n                [ngClass]=\"{'invisible': isFirstStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex)\"\r\n              ></div>\r\n              \r\n              <button id=\"sscb_{{stepIndex}}\"\r\n                [style]=\"'background-color: ' + this.getColor(stepIndex)\"\r\n                (click)=\"transitionToStep( stepIndex )\"\r\n              ></button>\r\n              \r\n              <div class=\"lineRight\" \r\n                [ngClass]=\"{'invisible': isLastStep(stepIndex)}\" \r\n                [style]=\"'border-color: ' + this.getColor(stepIndex + 1)\"\r\n              ></div>\r\n            </div>\r\n            \r\n            <label for=\"sscb_{{stepIndex}}\"\r\n                 [style]=\"'color: ' + this.getColor(stepIndex) + '; font-family: ' + this.fontFamily + '; font-size: ' + this.fontSize\"\r\n            >{{ getStepLabel(stepIndex) }}</label>  \r\n            \r\n            <div class=\"gutterBottom\"></div>\r\n          </div>\r\n          \r\n        </ng-container>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n    <div class=\"step-wrapper\" #stepWrapper>\r\n      <ng-content select=\"[sirius-step]\"></ng-content>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .header {\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%\r\n    }\r\n    \r\n    .logo {\r\n      text-align: center;\r\n    }\r\n    \r\n    .ctrlPanel {\r\n      flex-grow: 1;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: center;\r\n    }\r\n    \r\n    .ctrlBtn {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    \r\n    .ctrlBtn .gutterTop, .ctrlBtn .gutterBottom {\r\n      flex-grow: 1;\r\n    }\r\n    \r\n    .ctrlBtn .topWrap {\r\n      display: flex;\r\n      flex-direction: row;\r\n    }\r\n    \r\n    .ctrlBtn .lineLeft, .ctrlBtn .lineRight {\r\n      flex-grow: 1;\r\n      height: 50%;\r\n      border-bottom: 1px solid black;\r\n    }\r\n    \r\n    .ctrlBtn button {\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 12px;\r\n      border: none;\r\n    }\r\n    \r\n    .ctrlBtn label {\r\n      padding: 8px 12px 0 12px;\r\n      text-align: center;\r\n    }\r\n    \r\n    .step-wrapper {\r\n      position: relative;\r\n    }\r\n    \r\n    .invisible {\r\n      visibility: hidden;\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n      .header {\r\n        flex-direction: row;\r\n      }\r\n      \r\n      .ctrlPanel {\r\n        justify-content: right;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class SiriusStepperComponent implements OnDestroy, AfterViewInit {\r\n\r\n  @ViewChild('stepWrapper') stepWrapper: ElementRef;\r\n  @Output('step-changes') indexChanges = new EventEmitter<number>(true);\r\n  @Output('steps') indexes = new EventEmitter<number[]>(true);\r\n  @Input('override-step') overrideIndex$: Observable<number>;\r\n  @Input('highlight-color') highlightColor = '#D76928';\r\n  @Input('muted-color') mutedColor = '#A2A4AD';\r\n  @Input('font-family') fontFamily = 'Bryant Pro Semibold';\r\n  @Input('font-size') fontSize = 'inherit';\r\n\r\n  private _steps$ = new BehaviorSubject<{ [index: string]: SiriusStepDirective }>({});\r\n  private _stepViewIndex$ = new ReplaySubject<number>(1);\r\n  private _stepControl$ = new ReplaySubject<{ index: number, state: 'create'|'destroy' }>(1);\r\n  private _currentStepIndex: number;\r\n  private _currentStepIndexImmediate: number;\r\n  private _animating = false;\r\n\r\n  private destroyed$ = new ReplaySubject<void>(1);\r\n\r\n  constructor(\r\n    private animBuilder: AnimationBuilder\r\n  ) { }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.init();\r\n    this.setupStepTransitions();\r\n  }\r\n\r\n  get stepControl$(): Observable<{ index: number, state: 'create'|'destroy' }> {\r\n    return this._stepControl$.asObservable();\r\n  }\r\n\r\n  get stepIndexes(): number[] {\r\n    return Object.keys(this._steps$.value)\r\n      .map(k => parseInt(k))\r\n      .sort((a, b) => a - b);\r\n  }\r\n\r\n  getStepLabel(stepIndex: number): string {\r\n    return this._steps$.value[stepIndex].stepLabel || '';\r\n  }\r\n\r\n  isFirstStep(stepIndex: number): boolean {\r\n    return this.stepIndexes[0] === stepIndex;\r\n  }\r\n\r\n  isLastStep(stepIndex: number): boolean {\r\n    return this.stepIndexes[ this.stepIndexes.length-1 ] === stepIndex;\r\n  }\r\n\r\n  getColor(stepIndex: number): string {\r\n    return this._currentStepIndexImmediate >= stepIndex ? this.highlightColor : this.mutedColor;\r\n  }\r\n\r\n  linkStep(step: SiriusStepDirective): void {\r\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n      throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n\r\n    const newStep = {};\r\n    newStep[step.stepIndex] = step;\r\n\r\n    this._steps$.next(\r\n      Object.assign({}, this._steps$.value, newStep)\r\n    );\r\n  }\r\n\r\n  unlinkStep(step: SiriusStepDirective): void {\r\n    if (!step || (!step.stepIndex && step.stepIndex !== 0))\r\n      throw new Error(`\r\n        Step is missing attribute [step]\r\n        \r\n        [step] should be a number identifying the order in the step sequence\r\n        \r\n        Example: <ng-template sirius-step [link]=\"stepper\" [step]=\"1\">\r\n      `);\r\n\r\n    const newSteps = Object.assign({}, this._steps$.value);\r\n    delete newSteps[step.stepIndex];\r\n\r\n    this._steps$.next(newSteps);\r\n  }\r\n\r\n  transitionToStep(stepIndex: number): void {\r\n    if (this._animating)\r\n      return;\r\n\r\n    const stepIndexes = Object.keys(this._steps$.value);\r\n\r\n    if (!stepIndexes.find(i => parseInt(i) === stepIndex))\r\n      throw new Error(`\r\n        Step '${stepIndex}' is not defined\r\n      `);\r\n\r\n    this._stepViewIndex$.next(stepIndex);\r\n  }\r\n\r\n  private init() {\r\n\r\n    this._steps$.pipe(\r\n      takeUntil(this.destroyed$),\r\n      filter(steps => {\r\n        // filter out empty obj\r\n        return (steps && Object.keys(steps).length > 0) ? true : false;\r\n      })\r\n    ).subscribe(steps => {\r\n\r\n      setTimeout(() => this.indexes.emit(this.stepIndexes));\r\n\r\n      // set first step as active by default\r\n      this._stepViewIndex$.next(\r\n        parseInt( Object.keys(steps)[0] )\r\n      );\r\n\r\n    });\r\n\r\n    if (!this.overrideIndex$)\r\n      return;\r\n    this.overrideIndex$.pipe(\r\n      takeUntil(this.destroyed$)\r\n    ).subscribe(newIndex => {\r\n      if (!newIndex && newIndex !== 0)\r\n        return;\r\n      this.transitionToStep(newIndex)\r\n    });\r\n\r\n  }\r\n\r\n  private setupStepTransitions() {\r\n\r\n    this._stepViewIndex$.pipe(\r\n      takeUntil(this.destroyed$),\r\n\r\n      switchMap(stepIndex => {    // fade out last active step (if exists)\r\n        this._animating = true;\r\n        setTimeout(() => {\r\n          this._currentStepIndexImmediate = stepIndex;\r\n          this.indexChanges.emit(stepIndex);\r\n        });\r\n\r\n        if (this._currentStepIndex || this._currentStepIndex === 0)\r\n          return this.animate(this.fadeOut)\r\n            .pipe( map(() => stepIndex) );\r\n\r\n        return of(stepIndex);\r\n      }),\r\n\r\n      switchMap(stepIndex => {    // fade in new active step\r\n        if (this._currentStepIndex || this._currentStepIndex === 0) {\r\n          this._stepControl$.next({ index: this._currentStepIndex, state: 'destroy' });\r\n        }\r\n        this._stepControl$.next({ index: stepIndex, state: 'create' });\r\n\r\n        return this.animate(this.fadeIn).pipe(\r\n          tap(() => {\r\n            this._currentStepIndex = stepIndex;\r\n            this._animating = false;\r\n          })\r\n        );\r\n      })\r\n    ).subscribe(() => {});\r\n\r\n  }\r\n\r\n  private animate(animation: any[]): Observable<void> {\r\n    return new Observable(obs => {\r\n      const animFactory = this.animBuilder.build(animation);\r\n      const animPlayer = animFactory.create(this.stepWrapper.nativeElement);\r\n      animPlayer.play();\r\n      animPlayer.onDone(() => {\r\n        obs.next();\r\n        obs.complete();\r\n      });\r\n    });\r\n  }\r\n\r\n  private get fadeIn() {\r\n    return [\r\n      style({ opacity: 0, bottom: -20 }),\r\n      animate('200ms ease-in', style({ opacity: 1, bottom: 0 }))\r\n    ];\r\n  }\r\n\r\n  private get fadeOut() {\r\n    return [\r\n      style({ opacity: '*', bottom: '*' }),\r\n      animate('200ms ease-in', style({ opacity: 0, bottom: -20 }))\r\n    ];\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[sirius-logo]'\r\n})\r\nexport class SiriusLogoDirective implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainerRef: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewContainerRef.clear();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.viewContainerRef.clear();\r\n    this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  OnDestroy,\r\n  OnChanges,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { switchMap, takeUntil } from 'rxjs/operators';\r\n\r\nimport { SiriusStepperComponent } from './sirius-stepper.component';\r\n\r\n@Directive({\r\n  selector: '[sirius-step]'\r\n})\r\nexport class SiriusStepDirective implements OnInit, OnDestroy, OnChanges {\r\n\r\n  @Input('link') component: SiriusStepperComponent;\r\n  @Input('step') stepIndex: number;\r\n  @Input('label') stepLabel: string;\r\n\r\n  private initialized$ = new ReplaySubject<void>(1);\r\n  private destroyed$ = new ReplaySubject<void>(1);\r\n\r\n  constructor(\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainerRef: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewContainerRef.clear();\r\n    this.component.unlinkStep(this);\r\n    this.destroyed$.next();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ( this.component && (this.stepIndex || this.stepIndex === 0) ) {\r\n      this.component.linkStep(this);\r\n      this.initialized$.next();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.initialized$.pipe(\r\n      takeUntil(this.destroyed$),\r\n      switchMap(() => this.component.stepControl$)\r\n    ).subscribe(command => {\r\n\r\n      if (!command || command.index !== this.stepIndex)\r\n        return;\r\n\r\n      if (command.state === 'destroy')\r\n        setTimeout( () => this.viewContainerRef.clear() );\r\n      else if (command.state === 'create')\r\n        setTimeout( () => this.viewContainerRef.createEmbeddedView(this.templateRef) );\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { SiriusStepperComponent } from './sirius-stepper.component';\r\nimport { SiriusLogoDirective } from './sirius-logo.directive';\r\nimport { SiriusStepDirective } from './sirius-step.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SiriusStepperComponent,\r\n    SiriusLogoDirective,\r\n    SiriusStepDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  exports: [\r\n    SiriusStepperComponent,\r\n    SiriusLogoDirective,\r\n    SiriusStepDirective\r\n  ],\r\n  entryComponents: [\r\n    SiriusLogoDirective,\r\n    SiriusStepDirective\r\n  ]\r\n})\r\nexport class SiriusStepperModule { }\r\n","/*\r\n * Public API Surface of sirius-stepper\r\n */\r\n\r\nexport * from './lib/sirius-stepper.component';\r\nexport * from './lib/sirius-logo.directive';\r\nexport * from './lib/sirius-step.directive';\r\nexport * from './lib/sirius-stepper.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}